// This KQL tracks password reset events and classifies users based on their reset behavior. If they're resetting too many times, we gently complain and call them out for being "forgetful" or "overdoing it" with their devices.
let selfServiceResets = dynamic(["Self-service password reset", "Change password (self-service)"]);
let thresholdNormal = 1;  // Baseline per-user changes
let thresholdExcessive = 2; // Suspicious threshold
let thresholdMassReset = 5; // Policy change threshold
let PasswordResetEvents = 
(union isfuzzy=true
    (SecurityEvent 
    | where EventID in (4723, 4724)
    | extend User = TargetUserName),
    (WindowsEvent 
    | where EventID in (4723, 4724)
    | extend User = tostring(EventData.TargetUserName)),
    (AuditLogs 
    | where OperationName has_any ("password", "reset", "change")
    | mv-expand TargetResources
    | extend User = tostring(TargetResources.userPrincipalName)),
    (OfficeActivity 
    | where OfficeWorkload == "AzureActiveDirectory"
    | extend User = OfficeObjectId)
)
| where isempty(selfServiceResets) or OperationName !in (selfServiceResets);
PasswordResetEvents
| summarize 
    StartTime = min(TimeGenerated),
    EndTime = max(TimeGenerated),
    TotalResets = count(),
    ResetMethods = make_set(Type),
    SourceComputers = make_set(Computer)
    by User
| extend ResetBehavior = case(
    TotalResets > thresholdMassReset, 
        strcat("🚨 REALLY?! You've reset your password ", TotalResets, " times? Seriously? That's a *policy* issue now."),
    TotalResets > thresholdExcessive and array_length(SourceComputers) > 3,
        strcat("🤦 Why so many devices? ", array_length(SourceComputers), " devices? That's overkill!"),
    TotalResets > thresholdExcessive,
        strcat("🔁 Oh no, not again! ", TotalResets, " password resets? Maybe a password manager would help?"),
    "✅ At least you're sticking to your normal password rotation. Keep it up!")
| project 
    User,
    StartTime,
    EndTime,
    TotalResets,
    DevicesUsed = array_length(SourceComputers),
    ResetBehavior,
    ResetMethods
| order by TotalResets desc